// Attaching and Mounting block volume to VM //

- on the OCI Console, create a block volume or use an existing one and attach it to a VM
- ssh to the VM and verify that the block volume is attached 
[opc@pnr-vm1 ~]$ lsblk
NAME               MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                  8:0    0 46.6G  0 disk
├─sda1               8:1    0  100M  0 part /boot/efi
├─sda2               8:2    0    1G  0 part /boot
└─sda3               8:3    0 45.5G  0 part
  ├─ocivolume-root 252:0    0 35.5G  0 lvm  /
  └─ocivolume-oled 252:1    0   10G  0 lvm  /var/oled
sdb                  8:16   0   50G  0 disk

- If this is the fist time attaching the block volume, then create a file system 
[opc@pnr-vm1 ~]$ sudo mkfs -t ext4 /dev/sdb
mke2fs 1.46.2 (28-Feb-2021)
Discarding device blocks: done
Creating filesystem with 13107200 4k blocks and 3276800 inodes
Filesystem UUID: 0b845647-8bfa-438a-994f-830930d4c01d
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
        4096000, 7962624, 11239424

Allocating group tables: done
Writing inode tables: done
Creating journal (65536 blocks): done
Writing superblocks and filesystem accounting information: done

-If you are attaching an existing block volume to a new VM, then you  not need to create a file system and can retain the data in the block volume. If you do want to create one on an existing bock volume, note that the contents in the volume will be erased. 
- The process is like formatting an enternal drive to a computer. Formatting = mkfs command, and Plugging-in the drive to use = mount command

- Once File system is created on new Block Volume or existing block Volume is attached and verified in lsblk, mount the drive to your desired location or a newly created location 

[opc@pnr-vm1 ~]$ sudo mkdir /u01
[opc@pnr-vm1 ~]$ sudo mount /dev/sdb /u01

- verify if the disk is mounted 
[opc@pnr-vm1 ~]$ df -h
Filesystem                  Size  Used Avail Use% Mounted on
devtmpfs                    429M     0  429M   0% /dev
tmpfs                       475M     0  475M   0% /dev/shm
tmpfs                       475M  6.6M  468M   2% /run
tmpfs                       475M     0  475M   0% /sys/fs/cgroup
/dev/mapper/ocivolume-root   36G  7.3G   29G  21% /
/dev/sda2                  1014M  325M  690M  33% /boot
/dev/mapper/ocivolume-oled   10G  137M  9.9G   2% /var/oled
/dev/sda1                   100M  6.0M   94M   6% /boot/efi
tmpfs                        95M     0   95M   0% /run/user/987
tmpfs                        95M     0   95M   0% /run/user/1000
/dev/sdb                     49G   24K   47G   1% /u01

[opc@nikhi-vm1 ~]$ mount 
<last entry about the new drive>
/dev/sdb on /u01 type ext4 (rw,relatime,seclabel,stripe=256)

- If you restart the VM, this drive will be unmounted, but will remain attached. Hence, add the entry into /etc/fstab to remount even after rebooting. add as root user
[opc@pnr-vm1 ~]$ sudo su - root
[root@pnr-vm1 ~]# vi /etc/fstab
< this this entry in the file along with other drives> 
/dev/sdb                   /u01                ext4   defaults      0 0
- Verify the entry
[root@pnr-vm1 ~]# cat /etc/fstab | grep /u01
/dev/sdb                   /u01                ext4   defaults      0 0

- reboot instance and test whether the drive gets mounted on its own and ready to use
[opc@pnr-vm1 ~]$ df -h
Filesystem                  Size  Used Avail Use% Mounted on
devtmpfs                    429M     0  429M   0% /dev
tmpfs                       475M     0  475M   0% /dev/shm
tmpfs                       475M  6.6M  468M   2% /run
tmpfs                       475M     0  475M   0% /sys/fs/cgroup
/dev/mapper/ocivolume-root   36G  7.3G   29G  21% /
/dev/sdb                     49G   24K   47G   1% /u01
/dev/mapper/ocivolume-oled   10G  132M  9.9G   2% /var/oled
/dev/sda2                  1014M  325M  690M  33% /boot
/dev/sda1                   100M  6.0M   94M   6% /boot/efi
tmpfs                        95M     0   95M   0% /run/user/987
tmpfs                        95M     0   95M   0% /run/user/1000
[opc@pnr-vm1 ~]$
[opc@pnr-vm1 ~]$ df -h | grep /u01
/dev/sdb                     49G   24K   47G   1% /u01
